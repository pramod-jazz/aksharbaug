/*
 * MemberMaster.java
 *
 * Created on August 19, 2012, 8:40 PM
 */

import java.sql.Statement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
/**
 *
 * @author  Administrator
 */
public class MemberMaster extends javax.swing.JFrame {
    MainClass mc=new MainClass();
    ResultSet rsmem;
    int rspos=0;
    int rscount=0;
    boolean chadd=false;
    /** Creates new form MemberMaster */
    public MemberMaster() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TxtMemID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TxtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TxtEmailID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TxtMobileNo = new javax.swing.JTextField();
        LblPosition = new javax.swing.JLabel();
        CmdNew = new javax.swing.JButton();
        CmdSave = new javax.swing.JButton();
        CmdClose = new javax.swing.JButton();
        ChkMemActive = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtAddress = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        TxtMemberID = new javax.swing.JTextField();
        CmdMemberDetails = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Aksharbag : Member Master");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 255));
        jLabel1.setText("Aksharbag - Members");

        jLabel2.setText("* Member ID:");

        TxtMemID.setEditable(false);
        TxtMemID.setText("jTextField1");
        TxtMemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtMemIDActionPerformed(evt);
            }
        });

        jLabel3.setText("* Name:");

        TxtName.setText("jTextField1");

        jLabel4.setText("* Address:");

        jLabel5.setText("Email ID:");

        TxtEmailID.setText("jTextField1");

        jLabel6.setText("Mobile No:");

        TxtMobileNo.setText("jTextField1");

        CmdNew.setText("New");
        CmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdNewActionPerformed(evt);
            }
        });

        CmdSave.setText("Save or Update");
        CmdSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdSaveActionPerformed(evt);
            }
        });

        CmdClose.setText("Close");
        CmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdCloseActionPerformed(evt);
            }
        });

        ChkMemActive.setText("Member Active");

        TxtAddress.setColumns(20);
        TxtAddress.setRows(5);
        TxtAddress.setText("TxtAddress");
        jScrollPane1.setViewportView(TxtAddress);

        jLabel7.setText("DOB:");

        jLabel8.setText("Search Member ID :");

        TxtMemberID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtMemberIDActionPerformed(evt);
            }
        });

        CmdMemberDetails.setText("Details");
        CmdMemberDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmdMemberDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(TxtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CmdMemberDetails))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(TxtMemID, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(TxtEmailID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ChkMemActive, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(TxtMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(375, 375, 375)
                        .addComponent(LblPosition))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(CmdNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CmdSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CmdClose)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(TxtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CmdMemberDetails))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TxtMemID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TxtName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addComponent(jLabel4)
                        .addGap(78, 78, 78)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(ChkMemActive)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CmdSave)
                    .addComponent(CmdClose)
                    .addComponent(CmdNew))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LblPosition)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 private void Display()
    {
        try
        {
            //clear text of fields for entry/display old data
            TxtMemID.setText(rsmem.getString("mem_id"));
            TxtName.setText(rsmem.getString("mem_name"));
            TxtAddress.setText(rsmem.getString("mem_address"));
            TxtEmailID.setText(rsmem.getString("mem_email_id"));
            TxtMobileNo.setText(rsmem.getString("mem_mobile_no"));
            jDateChooser1.setDate(rsmem.getDate("date_of_birth"));
            
            if (rsmem.getString("mem_active").equals("Y"))
            {
                ChkMemActive.setSelected(true);
            }
            else
            {
                ChkMemActive.setSelected(false);
            }

            
            LblPosition.setText("Record position : " + rsmem.getRow() + "/" + String.valueOf(rscount));
        }
        catch (Exception e)
        {
            System.err.println(e);
            
        }
    }
    
    private void ClearText()
    {
        //clear text of fields for entry/display old data
        TxtMemID.setText("");
        TxtName.setText("");
        TxtAddress.setText("");
        TxtEmailID.setText("");
        TxtMobileNo.setText("");
        jDateChooser1.setDate(null);

        ChkMemActive.setSelected(false);
        
        
    }
    private void CmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdNewActionPerformed
        chadd=true;
        ClearText();
    }//GEN-LAST:event_CmdNewActionPerformed

    public boolean isValidEmailAddress(String email) {
           String ePattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
           java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
           java.util.regex.Matcher m = p.matcher(email);
           return m.matches();
    }
    public static boolean isNumeric(String str)
    {
      return str.matches("-?\\d+(\\.\\d+)?");  //match a number with optional '-' and decimal.
    }
    
    private void CmdSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdSaveActionPerformed
        //validate entry and save record
        try {
            
            if (TxtName.getText().trim().length()==0 ) {
                JOptionPane.showMessageDialog(null,"Enter member name.");
                return;
            }
            
           
            
            if(TxtEmailID.getText() != null && TxtEmailID.getText().trim().length()!=0){
                if(!isValidEmailAddress(TxtEmailID.getText())){
                   JOptionPane.showMessageDialog(null,"Please insert valid Email Address.");
                   return;
                }
            }
            
            if(TxtMobileNo.getText() != null && TxtMobileNo.getText().trim().length()!=0){
                if(!isNumeric(TxtMobileNo.getText())){
                   JOptionPane.showMessageDialog(null,"Please insert valid Mobile Number.");
                   return;
                }
            }
            
            
            
            
            
            //String strqr="";
            Connection connection;
            connection=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
            
            if (TxtMemID.getText().trim().length()==0 ) {
 
                rsmem.moveToInsertRow();
                
                rsmem.updateString("mem_name",TxtName.getText());
                rsmem.updateString("mem_address",TxtAddress.getText());
                rsmem.updateString("mem_email_id",TxtEmailID.getText());
                rsmem.updateString("mem_mobile_no",TxtMobileNo.getText());
                if(jDateChooser1.getDate()!=null){
                    rsmem.updateDate("date_of_birth", new Date(jDateChooser1.getDate().getTime()));
                }
                
                
                if (ChkMemActive.isSelected()==true)
                {
                    rsmem.updateString("mem_active","Y");
                }
                else
                {
                    rsmem.updateString("mem_active","N");
                }
                
                rsmem.insertRow();
                
                rsmem.last();
                Display();
            } else {
                 ResultSet rsmem2;
                Statement stmt2 = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sqlQuery = "select * from lib_member_master where mem_id =  "+ TxtMemID.getText() + " order by mem_id";
            rsmem2 = stmt2.executeQuery(sqlQuery);
            
            //display first record
            rsmem2.first();
                
                
                System.out.println(TxtMemID.getText());
                
                
                rsmem2.updateString("mem_name",TxtName.getText());
                rsmem2.updateString("mem_address",TxtAddress.getText());
                rsmem2.updateString("mem_email_id",TxtEmailID.getText());
                rsmem2.updateString("mem_mobile_no",TxtMobileNo.getText());
                
                if(jDateChooser1.getDate()!=null){
                    rsmem2.updateDate("date_of_birth", new Date(jDateChooser1.getDate().getTime()));
                }
                
                
                if (ChkMemActive.isSelected()==true)
                {
                    rsmem2.updateString("mem_active","Y");
                }
                else
                {
                    rsmem2.updateString("mem_active","N");
                }

                
                
                rsmem2.updateRow();
                rsmem2.refreshRow();
            }
            
            
            JOptionPane.showMessageDialog(null,"Record updated.");
        } catch (Exception e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"Unable to save record.");
            return;
        }
    }//GEN-LAST:event_CmdSaveActionPerformed

    private void CmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdCloseActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_CmdCloseActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
                try
        {
            
            this.setLocationRelativeTo(null);
            
            ClearText();

        
            Connection connection;          
            connection=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
            ResultSet rs;
            

            
            
            //get mem count
            PreparedStatement stmt;
            stmt=connection.prepareStatement("select count(*) from lib_member_master");
            rs = stmt.executeQuery();
            rs.first();
            rscount=rs.getInt(1);

            //get mem details
            Statement stmt1 = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sqlQuery = "select * from lib_member_master order by mem_id";
            rsmem = stmt1.executeQuery(sqlQuery);
            
            //display first record
            rsmem.first();
                 
            Display();         

        }
        catch (Exception e)
        {
            System.err.println(e);
            //System.exit(1);
        }

        
    }//GEN-LAST:event_formWindowOpened

    private void CmdMemberDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmdMemberDetailsActionPerformed
        //get member deatils
        try
        {
            //get database connection details
            MainClass mc=new MainClass();

            //open connection
            Connection connection;
            connection=DriverManager.getConnection(mc.StrUrl,mc.StrUid,mc.StrPwd);
            String str="";
            str="select * from lib_member_master where mem_id =? ";
            PreparedStatement pst=connection.prepareStatement(str);
            pst.setString(1, TxtMemberID.getText());

            ResultSet rs;
            rs=pst.executeQuery();
            if (rs.next())
            {
                TxtMemID.setText(rs.getString("mem_id"));
TxtName.setText(rs.getString("mem_name"));
TxtAddress.setText(rs.getString("mem_address"));
TxtMobileNo.setText(rs.getString("mem_mobile_no"));
TxtEmailID.setText(rs.getString("mem_email_id"));
                //get mem status
                str="select * from lib_transaction where trn_mem_id =? and (trn_receive_dt is null  or trn_receive_dt='')";
                PreparedStatement pst1=connection.prepareStatement(str);
                pst1.setString(1, TxtMemberID.getText());

                ResultSet rs1;
                rs1=pst1.executeQuery();
               
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Invalid member id.");
                TxtMemberID.setText("");
                
                
                return;
            }

        }
        catch (Exception e)
        {
            System.err.println(e);
            System.exit(1);
        }

    }//GEN-LAST:event_CmdMemberDetailsActionPerformed

    private void TxtMemberIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtMemberIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtMemberIDActionPerformed

    private void TxtMemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtMemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtMemIDActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberMaster().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ChkMemActive;
    private javax.swing.JButton CmdClose;
    private javax.swing.JButton CmdMemberDetails;
    private javax.swing.JButton CmdNew;
    private javax.swing.JButton CmdSave;
    private javax.swing.JLabel LblPosition;
    private javax.swing.JTextArea TxtAddress;
    private javax.swing.JTextField TxtEmailID;
    private javax.swing.JTextField TxtMemID;
    private javax.swing.JTextField TxtMemberID;
    private javax.swing.JTextField TxtMobileNo;
    private javax.swing.JTextField TxtName;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
}
